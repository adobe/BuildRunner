# Can't include these directly in buildrunner.yaml because they need 
# to be executed in the container that buildrunner.yaml produces
steps:

  # Ensure the image is here so the next step always passes
  ensure-image-exists:
    run:
      image: {{ DOCKER_REGISTRY }}/rockylinux:8.5
      cmd:   /bin/true
  # Remove the image
  clean-images-1:
    run:
      image: {{ DOCKER_REGISTRY }}/docker:20.10-dind
      cmd:   docker rmi -f {{ DOCKER_REGISTRY }}/rockylinux:8.5
  # Start up a container, it should NOT fail based on rockylinux:8.5 not existing
  test-without-systemd:
    run:
      image: {{ DOCKER_REGISTRY }}/rockylinux:8.5
      cmd:   /bin/true

  # Same as above, but for a service container
  ensure-alpine:
    run:
      image: {{ DOCKER_REGISTRY }}/alpine:latest
      cmd:   /bin/true
  clean-images-2:
    run:
      image: {{ DOCKER_REGISTRY }}/docker:20.10-dind
      pull:  false
      cmd:   docker rmi -f {{ DOCKER_REGISTRY }}/rockylinux:8.5 {{ DOCKER_REGISTRY }}/alpine:latest
  test-service-without-systemd:
     run:
       services:
         s1:
           build:
             dockerfile: |
               FROM {{ DOCKER_REGISTRY }}/rockylinux:8.5
               RUN yum -y install python3-setuptools python3-pip && yum clean all
               LABEL BUILDRUNNER_SYSTEMD=1
           run:
             cmd: python3 -m http.server 8001
       image: {{ DOCKER_REGISTRY }}/alpine:latest
       cmd: /bin/true

  # Ensure systemd init process is not running
  test-systemd-off:
    build:
      dockerfile: |
        FROM {{ DOCKER_REGISTRY }}/rockylinux:8.5
        RUN yum install -y procps-ng && yum clean all
    run:
       systemd: false
       cmd: ps -p 1 -o cmd | tail -1 | grep -v /usr/sbin/init

  # Ensure systemd init process is running
  test-systemd-on:
    build:
      dockerfile: |
        FROM {{ DOCKER_REGISTRY }}/rockylinux:8.5
        RUN yum install -y procps-ng && yum clean all
    run:
       systemd: true
       cmd: ps -p 1 -o cmd | tail -1 | grep /usr/sbin/init
  test-systemd-v248-on:
    build:
      dockerfile: |
        # Rocky linux 9 has 248+ installed
        FROM {{ DOCKER_REGISTRY }}/rockylinux:9.0
        RUN yum install -y procps-ng && yum clean all
    run:
       systemd: true
       systemd_v248: true
       cmd: ps -p 1 -o cmd | tail -1 | grep /usr/sbin/init

  test-systemd-on-built:
    build:
      dockerfile: |
        FROM {{ DOCKER_REGISTRY }}/rockylinux:8.5
        RUN yum install -y procps-ng && yum clean all
        LABEL BUILDRUNNER_SYSTEMD=1
    run:
      cmd: ps -p 1 -o cmd | tail -1 | grep /usr/sbin/init

  test-systemd-v248-on-built:
    build:
      dockerfile: |
        FROM {{ DOCKER_REGISTRY }}/rockylinux:9.0
        RUN yum install -y procps-ng && yum clean all
        LABEL BUILDRUNNER_SYSTEMD=1
        LABEL BUILDRUNNER_SYSTEMD_V248=1
    run:
      cmd: ps -p 1 -o cmd | tail -1 | grep /usr/sbin/init

  {% for v in ["", "0", "False"]: %}
  test-systemd-off-built-{{ v }}:
    build:
      dockerfile: |
        FROM {{ DOCKER_REGISTRY }}/rockylinux:8.5
        RUN yum install -y procps-ng && yum clean all
        LABEL BUILDRUNNER_SYSTEMD={{ v }}
    run:
      cmd: ps -p 1 -o cmd | tail -1 | grep -v /usr/sbin/init
  {% endfor %}

  # Ensure the systemd init script starts in the service container.  If so,
  # start a webserver that can be queried from the test container
  test-systemd-service:
    run:
      services:
        s1:
          build:
            dockerfile: |
              FROM {{ DOCKER_REGISTRY }}/rockylinux:8.5
              RUN yum -y install python3 procps-ng && yum clean all
              LABEL BUILDRUNNER_SYSTEMD=1
          systemd: true
          cmd: ps -p 1 -o cmd | tail -1 | grep /usr/sbin/init && python3 -m http.server 8001
      image: {{ DOCKER_REGISTRY }}/rockylinux:8.5
      pull: false
      cmd: curl http://s1:8001 1>/dev/null 2>&1
  test-systemd-v248-service:
    run:
      services:
        s1:
          build:
            dockerfile: |
              FROM {{ DOCKER_REGISTRY }}/rockylinux:9.0
              RUN yum -y install python3 procps-ng && yum clean all
              LABEL BUILDRUNNER_SYSTEMD=1
              LABEL BUILDRUNNER_SYSTEMD_V248=1
          systemd: true
          cmd: ps -p 1 -o cmd | tail -1 | grep /usr/sbin/init && python3 -m http.server 8001
      image: {{ DOCKER_REGISTRY }}/rockylinux:8.5
      pull: false
      cmd: curl http://s1:8001 1>/dev/null 2>&1
