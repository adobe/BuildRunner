# Test mounting a path from the build directory into the build
# container

steps:
  test-alias_dir_mount-tests:
    run:
      image: {{ DOCKER_REGISTRY }}/ubuntu:latest
      files:
        # Test directory alias specified in global config files (config-files/dot-buildrunner.yaml)
        tests: /tmp_dir
      cmds:
        - |
          set -eux
          [ -d /tmp_dir ]


  test-alias_dir_mount-homedir:
    run:
      image: {{ DOCKER_REGISTRY }}/ubuntu:latest
      files:
        # Test directory alias specified in global config files (config-files/dot-buildrunner.yaml)
        homedir: /tmp_dir
      cmds:
        - |
          set -eux
          [ -d /tmp_dir ]


  test-alias_dir_mount-forbidden_slash-xfail:
    run:
      xfail: true
      # Should be forbidden (viz. outside of the user's home directory,
      # not owned by the user and not specified in the ``MASTER_GLOBAL_CONFIG_FILE``
      # (``/etc/buildrunner/buildrunner.yaml``).
      image: {{ DOCKER_REGISTRY }}/ubuntu:latest
      files:
        # Test directory alias specified in global config files (config-files/dot-buildrunner.yaml)
        forbidden_slash: /tmp_dir
      cmds:
        - |
          set -eux
          [ -d /tmp_dir ]


  test-alias_dir_mount-dev_null:
    run:
      image: {{ DOCKER_REGISTRY }}/ubuntu:latest
      files:
        # Test directory alias specified in global config files (config-files/dot-buildrunner.yaml)
        dev_null: /test_file
      cmds:
        - |
          set -eux
          ls -l /test_file
          [ -c /test_file ]
          echo foo >/test_file
          [ -z "$(cat /test_file)" ] && echo EMPTY


  # This test ensures that local-files are merged between the different config files, since newly created files can
  # only be created in the master global config file.
  test-alias_dir_mount-new_file:
    run:
      image: {{ DOCKER_REGISTRY }}/ubuntu:latest
      files:
        # Test file alias specified in global config files (config-files/etc-buildrunner.yaml)
        new_file: /test_file
      cmds:
        - |
          set -eux
          ls -l /test_file
          [ "$(cat /test_file)" = "new_file contents" ]
