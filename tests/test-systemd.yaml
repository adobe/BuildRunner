# Can't include these directly in buildrunner.yaml because they need 
# to be executed in the container that buildrunner.yaml produces
steps:

  # Ensure the image is here so the next step always passes
  ensure-centos7:
    run:
      image: {{ DOCKER_REGISTRY }}/centos:7
      cmd:   /bin/true
  # Remove the centos image
  clean-images-1:
    run:
      image: {{ DOCKER_REGISTRY }}/docker:20.10-dind
      cmd:   docker rmi -f {{ DOCKER_REGISTRY }}/centos:7
  # Start up a container, it should NOT fail based on centos:7 not existing
  test-without-systemd:
    run:
      image: {{ DOCKER_REGISTRY }}/centos:7
      cmd:   /bin/true

  # Same as above, but for a service container
  ensure-alpine:
    run:
      image: {{ DOCKER_REGISTRY }}/alpine:latest
      cmd:   /bin/true
  clean-images-2:
    run:
      image: {{ DOCKER_REGISTRY }}/docker:20.10-dind
      pull:  false
      cmd:   docker rmi -f {{ DOCKER_REGISTRY }}/centos:7 {{ DOCKER_REGISTRY }}/alpine:latest
  test-service-without-systemd:
     run:
       services:
         s1:
           image: {{ DOCKER_REGISTRY }}/centos:7
           cmd: python -m SimpleHTTPServer 8001
       image: {{ DOCKER_REGISTRY }}/alpine:latest
       cmd: /bin/true

  # Ensure systemd init process is not running
  test-systemd-off:
    run:
       image: {{ DOCKER_REGISTRY }}/centos:7
       systemd: false
       cmd: ps -p 1 -o cmd | tail -1 | grep -v /usr/sbin/init

  # Ensure systemd init process is running
  test-systemd-on:
    run:
       image: {{ DOCKER_REGISTRY }}/centos:7
       systemd: true
       cmd: ps -p 1 -o cmd | tail -1 | grep /usr/sbin/init

  test-systemd-on-built:
    build:
      dockerfile: |
        FROM {{ DOCKER_REGISTRY }}/centos:7
        LABEL BUILDRUNNER_SYSTEMD=1
    run:
      cmd: ps -p 1 -o cmd | tail -1 | grep /usr/sbin/init

  {% for v in ["", "0", "False"]: %}
  test-systemd-off-built-{{ v }}:
    build:
      dockerfile: |
        FROM {{ DOCKER_REGISTRY }}/centos:7
        LABEL BUILDRUNNER_SYSTEMD={{ v }}
    run:
      cmd: ps -p 1 -o cmd | tail -1 | grep -v /usr/sbin/init
  {% endfor %}

  # Ensure the systemd init script starts in the service container.  If so,
  # start a webserver that can be queried from the test container
  test-systemd-service:
    run:
      services:
        s1:
          image:   {{ DOCKER_REGISTRY }}/centos:7
          systemd: true
          cmd: ps -p 1 -o cmd | tail -1 | grep /usr/sbin/init && python -m SimpleHTTPServer 8001
      image: docker-xeng-release.dr.corp.adobe.com/releng/buildrunner:latest
      pull: false
      cmd: curl http://s1:8001 1>/dev/null 2>&1
